{"version":3,"sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"names":["module","exports","Cast","id","useState","cast","setCast","useEffect","getCast","then","res","className","s","castList","map","actor","castItem","src","profile_path","alt","name","onError","e","target","castName"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,yB,oICOlF,SAASC,EAAT,GAAuB,IAAPC,EAAM,EAANA,GAAM,EACXC,mBAAS,MADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAOnC,OAJAC,qBAAU,WACRC,YAAQL,GAAIM,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIL,WACrC,CAACF,IAGFE,GACE,oBAAIM,UAAWC,IAAEC,SAAjB,SACGR,EAAKS,KAAI,SAACC,GAAD,OACR,qBAAmBJ,UAAWC,IAAEI,SAAhC,UACE,qBACEC,IAAG,0CAAqCF,EAAMG,cAC9CC,IAAKJ,EAAMK,KACXC,QAAS,SAACC,GACa,qBAAjBA,EAAEC,OAAON,MACXK,EAAEC,OAAON,IAAM,uBAIrB,mBAAGN,UAAWC,IAAEY,SAAhB,SAA2BT,EAAMK,SAV1BL,EAAMZ","file":"static/js/cast.868a6d97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"Cast_castList__1981E\",\"castItem\":\"Cast_castItem__2nKp_\",\"castName\":\"Cast_castName__2W3Ih\"};","// Libraries import\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Other imports\r\nimport { getCast } from \"../../services/tmdbApi\";\r\nimport s from \"./Cast.module.css\";\r\n\r\nexport default function Cast({ id }) {\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCast(id).then((res) => setCast(res.cast));\r\n  }, [id]);\r\n\r\n  return (\r\n    cast && (\r\n      <ul className={s.castList}>\r\n        {cast.map((actor) => (\r\n          <li key={actor.id} className={s.castItem}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`}\r\n              alt={actor.name}\r\n              onError={(e) => {\r\n                if (e.target.src !== \"/imgNotFound.png\") {\r\n                  e.target.src = \"/imgNotFound.png\";\r\n                }\r\n              }}\r\n            />\r\n            <p className={s.castName}>{actor.name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nCast.propTypes = {\r\n  id: PropTypes.string,\r\n};"],"sourceRoot":""}