{"version":3,"sources":["../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","views/Homepage/Homepage.jsx","../node_modules/react-query/es/react/useQuery.js","services/tmdbApi.js","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx"],"names":["QueryObserver","_Subscribable","client","options","_this","call","this","initialDataUpdateCount","initialErrorUpdateCount","trackedProps","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","updateQuery","currentQuery","addObserver","willFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","willLoadOnMount","enabled","state","dataUpdatedAt","status","retryOnMount","willRefetchOnMount","refetchOnMount","isStale","willFetchOnReconnect","refetchOnReconnect","willFetchOnWindowFocus","refetchOnWindowFocus","willFetchOptionally","isStaleByTime","staleTime","clearTimers","removeObserver","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","optionalFetch","updateStaleTimeout","refetchInterval","updateRefetchInterval","getCurrentResult","currentResult","getTrackedCurrentResult","trackedCurrentResult","getNextResult","_this2","Promise","resolve","reject","unsubscribe","subscribe","result","isFetching","isError","throwOnError","error","getCurrentQuery","getQueryCache","fetch","fetchOptions","_this3","then","updateResult","promise","catch","noop","_this4","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","staleTimeoutId","setTimeout","prevResult","notify","shouldNotifyListeners","cache","_this5","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","undefined","clearInterval","getNewResult","willFetch","_this$previousQueryRe","data","isPreviousData","isPlaceholderData","keepPreviousData","dataUpdateCount","previousQueryResult","isSuccess","select","_this$currentResultSt","_this$currentResult","currentResultState","structuralSharing","replaceEqualDeep","placeholderData","_extends","getStatusProps","errorUpdatedAt","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","_this6","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","keys","Object","includedProps","_loop","i","key","changed","isIncluded","some","x","isExcluded","v","_ret","_this7","shallowEqualObjects","forEach","defineProperty","configurable","enumerable","get","prop","includes","push","query","build","hasListeners","onQueryUpdate","action","notifyOptions","type","onSuccess","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","batchCalls","suspense","observerRef","useRef","observer","current","setCurrentResult","useState","useEffect","useErrorBoundary","isLoading","finally","Homepage","arg1","arg2","arg3","getTrendingMovies","parseQueryArgs","message","style","textAlign","MoviesList","moviesArr","results","KEY","BASE_URL","a","axios","res","err","console","log","getMovieById","id","getCast","getReviews","findMovie","page","module","exports","url","location","useLocation","className","s","list","map","movie","listItem","listLink","to","pathname","from","listImg","src","poster_path","alt","original_title","e","target","title"],"mappings":"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","file":"static/js/homepage.54a0329b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getStatusProps, isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.initialDataUpdateCount = 0;\n    _this.initialErrorUpdateCount = 0;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.updateQuery();\n      this.currentQuery.addObserver(this);\n\n      if (this.willFetchOnMount()) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.willLoadOnMount = function willLoadOnMount() {\n    return this.options.enabled !== false && !this.currentQuery.state.dataUpdatedAt && !(this.currentQuery.state.status === 'error' && this.options.retryOnMount === false);\n  };\n\n  _proto.willRefetchOnMount = function willRefetchOnMount() {\n    return this.options.enabled !== false && this.currentQuery.state.dataUpdatedAt > 0 && (this.options.refetchOnMount === 'always' || this.options.refetchOnMount !== false && this.isStale());\n  };\n\n  _proto.willFetchOnMount = function willFetchOnMount() {\n    return this.willLoadOnMount() || this.willRefetchOnMount();\n  };\n\n  _proto.willFetchOnReconnect = function willFetchOnReconnect() {\n    return this.options.enabled !== false && (this.options.refetchOnReconnect === 'always' || this.options.refetchOnReconnect !== false && this.isStale());\n  };\n\n  _proto.willFetchOnWindowFocus = function willFetchOnWindowFocus() {\n    return this.options.enabled !== false && (this.options.refetchOnWindowFocus === 'always' || this.options.refetchOnWindowFocus !== false && this.isStale());\n  };\n\n  _proto.willFetchOptionally = function willFetchOptionally() {\n    return this.options.enabled !== false && this.isStale();\n  };\n\n  _proto.isStale = function isStale() {\n    return this.currentQuery.isStaleByTime(this.options.staleTime);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery(); // Take no further actions if there are no subscribers\n\n    if (!this.listeners.length) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (this.options.enabled !== false && prevOptions.enabled === false) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.getTrackedCurrentResult = function getTrackedCurrentResult() {\n    return this.trackedCurrentResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this2.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this3 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this3.updateResult();\n\n      return _this3.currentResult;\n    });\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.willFetchOptionally()) {\n      this.executeFetch();\n    }\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this4 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this4.currentResult.isStale) {\n        var prevResult = _this4.currentResult;\n\n        _this4.updateResult();\n\n        _this4.notify({\n          listeners: _this4.shouldNotifyListeners(prevResult, _this4.currentResult),\n          cache: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this5 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this5.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this5.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.getNewResult = function getNewResult(willFetch) {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data;\n    var dataUpdatedAt = state.dataUpdatedAt; // Optimistically set status to loading if we will start fetching\n\n    if (willFetch) {\n      isFetching = true;\n\n      if (!dataUpdatedAt) {\n        status = 'loading';\n      }\n    } // Keep previous data if needed\n\n\n    if (this.options.keepPreviousData && !state.dataUpdateCount && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess) && status !== 'error') {\n      data = this.previousQueryResult.data;\n      dataUpdatedAt = this.previousQueryResult.dataUpdatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (this.options.select && typeof state.data !== 'undefined') {\n        var _this$currentResultSt;\n\n        // Use the previous select result if the query data did not change\n        if (this.currentResult && state.data === ((_this$currentResultSt = this.currentResultState) == null ? void 0 : _this$currentResultSt.data)) {\n          data = this.currentResult.data;\n        } else {\n          data = this.options.select(state.data);\n\n          if (this.options.structuralSharing !== false) {\n            var _this$currentResult;\n\n            data = replaceEqualDeep((_this$currentResult = this.currentResult) == null ? void 0 : _this$currentResult.data, data);\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof this.options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData = typeof this.options.placeholderData === 'function' ? this.options.placeholderData() : this.options.placeholderData;\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = _extends({}, getStatusProps(status), {\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: state.error,\n      errorUpdatedAt: state.errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > this.initialDataUpdateCount || state.errorUpdateCount > this.initialErrorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: this.isStale(),\n      refetch: this.refetch,\n      remove: this.remove\n    });\n\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(prevResult, result) {\n    var _this6 = this;\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (prevResult === result) {\n      return false;\n    }\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    var keys = Object.keys(result);\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n\n    var _loop = function _loop(i) {\n      var key = keys[i];\n      var changed = prevResult[key] !== result[key];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n\n      if (changed) {\n        if (notifyOnChangePropsExclusions && isExcluded) {\n          return \"continue\";\n        }\n\n        if (!notifyOnChangeProps || isIncluded || notifyOnChangeProps === 'tracked' && _this6.trackedProps.length === 0) {\n          return {\n            v: true\n          };\n        }\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    return false;\n  };\n\n  _proto.updateResult = function updateResult(willFetch) {\n    var _this7 = this;\n\n    var result = this.getNewResult(willFetch); // Keep reference to the current state on which the current result is based on\n\n    this.currentResultState = this.currentQuery.state; // Only update if something has changed\n\n    if (!shallowEqualObjects(result, this.currentResult)) {\n      this.currentResult = result;\n\n      if (this.options.notifyOnChangeProps === 'tracked') {\n        var addTrackedProps = function addTrackedProps(prop) {\n          if (!_this7.trackedProps.includes(prop)) {\n            _this7.trackedProps.push(prop);\n          }\n        };\n\n        this.trackedCurrentResult = {};\n        Object.keys(result).forEach(function (key) {\n          Object.defineProperty(_this7.trackedCurrentResult, key, {\n            configurable: false,\n            enumerable: true,\n            get: function get() {\n              addTrackedProps(key);\n              return result[key];\n            }\n          });\n        });\n      }\n    }\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var prevQuery = this.currentQuery;\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialDataUpdateCount = query.state.dataUpdateCount;\n    this.initialErrorUpdateCount = query.state.errorUpdateCount;\n    var willFetch = prevQuery ? this.willFetchOptionally() : this.willFetchOnMount();\n    this.updateResult(willFetch);\n\n    if (!this.hasListeners()) {\n      return;\n    }\n\n    prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n    this.currentQuery.addObserver(this);\n\n    if (this.shouldNotifyListeners(this.previousQueryResult, this.currentResult)) {\n      this.notify({\n        listeners: true\n      });\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    // Store current result and get new result\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers\n\n    this.updateTimers(); // Do not notify if the nothing has changed\n\n    if (prevResult === currentResult) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    if (this.shouldNotifyListeners(prevResult, currentResult)) {\n      notifyOptions.listeners = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify(_this8.currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly re-mounting after suspense\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Prevent retrying failed query if the error boundary has not been reset yet\n\n\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  } // Create query observer\n\n\n  var observerRef = React.useRef();\n  var observer = observerRef.current || new Observer(queryClient, defaultedOptions);\n  observerRef.current = observer; // Update options\n\n  if (observer.hasListeners()) {\n    observer.setOptions(defaultedOptions);\n  }\n\n  var currentResult = observer.getCurrentResult();\n\n  var _React$useState = React.useState(currentResult),\n      setCurrentResult = _React$useState[1]; // Subscribe to the observer\n\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(notifyManager.batchCalls(setCurrentResult));\n  }, [observer, errorResetBoundary]); // Handle suspense\n\n  if (observer.options.suspense || observer.options.useErrorBoundary) {\n    if (observer.options.suspense && currentResult.isLoading) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.refetch().finally(unsubscribe);\n    }\n\n    if (currentResult.isError) {\n      throw currentResult.error;\n    }\n  }\n\n  return observer.options.notifyOnChangeProps === 'tracked' ? observer.getTrackedCurrentResult() : currentResult;\n}","// Libraries import\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getTrendingMovies } from \"../../services/tmdbApi\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n// Components import\r\nimport MoviesList from \"../../components/MoviesList\";\r\n\r\nexport default function Homepage() {\r\n  const { status, data, error } = useQuery(\"popularMovies\", getTrendingMovies);\r\n\r\n  if (status === \"loading\") {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === \"error\") {\r\n    return <span>Error: {error.message}</span>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: \"center\" }}>Popular movies this week:</h1>\r\n      {status === \"success\" && <MoviesList moviesArr={data.results} />}\r\n    </>\r\n  );\r\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import axios from 'axios';\r\n\r\nconst KEY = '2bd63387ebd1c73ba3770ca5b24c8e07';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport async function getTrendingMovies() {\r\n  return await axios\r\n    .get(`${BASE_URL}trending/movie/week?api_key=${KEY}`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport async function getMovieById(id) {\r\n  return await axios\r\n    .get(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport async function getCast(id) {\r\n  return await axios\r\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport async function getReviews(id) {\r\n  return await axios\r\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport async function findMovie(query, page) {\r\n  return await axios\r\n    .get(\r\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=${page}&query=${query}`,\r\n    )\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MoviesList_list__1T_Yj\",\"listItem\":\"MoviesList_listItem__2mA8H\",\"listImg\":\"MoviesList_listImg__28Rdt\",\"listLink\":\"MoviesList_listLink__1NeuC\"};","// Libraries import\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Other imports\r\nimport s from \"./MoviesList.module.css\";\r\n\r\nexport default function MoviesList({ moviesArr, url = \"/movies\" }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul\r\n      className={s.list}\r\n    >\r\n      {moviesArr.map((movie) => (\r\n        <li key={movie.id}\r\n          className={s.listItem}\r\n        >\r\n          <Link\r\n            className={s.listLink}\r\n            to={{\r\n              pathname: `${url}/${movie.id}`,\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          >\r\n            <img\r\n              className={s.listImg}\r\n              src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\r\n              alt={movie.original_title}\r\n              onError={(e) => {\r\n                if (e.target.src !== \"/imgNotFound.png\") {\r\n                  e.target.src = \"/imgNotFound.png\";\r\n                }\r\n              }}\r\n            />\r\n\r\n            <p>{movie.title}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nMoviesList.propTypes = {\r\n  moviesArr: PropTypes.array,\r\n  url: PropTypes.string,\r\n};"],"sourceRoot":""}